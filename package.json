{
    "name": "@snailicide/root",
    "version": "0.0.1",
    "description": "Snailicide Monorepo",
    "private": true,
    "type": "module",
    "repository": {
        "type": "git",
        "url": "git+https://github.com/gbtunney/snailicide-monorepo.git"
    },
    "license": "MIT",
    "author": {
        "name": "Gillian Tunney",
        "email": "gbtunney@mac.com"
    },
    "scripts": {
        "\n========== COMMIT >> ==========": "",
        "commit": "pnpm build:self && pnpm build && pnpm exec git-cz",
        "commit:build-config": "pnpm nx:build:config && pnpm build:self && pnpm exec git-cz",
        "prepare:all": "pnpm run fix && pnpm run check && pnpm test",
        "\n========== NX >> ==========": "",
        "nx:graph": "pnpm nx graph",
        "nx:affected": "nx affected --target=build",
        "nx:build": "pnpm exec nx run-many -t build",
        "nx:build:all": "pnpm exec nx run-many --target=build --all",
        "nx:reset": "pnpm exec nx reset",
        "nx:docs": "pnpm exec nx run-many -t docs:build",
        "\n========== DOCS >> ==========": "",
        "docs:build": "pnpm nx:docs",
        "\n========== BUILD >> ==========": "",
        "build": "pnpm run build:self && pnpm nx:build",
        "nx:build:config": "pnpm exec nx run @snailicide/build-config:build",
        "build:self": "tsc --build",
        "\n========== TEST >>==========": "",
        "test": "pnpm nx:test",
        "nx:test": "pnpm exec nx run-many --target=test",
        "\n========== PUBLISH >> ==========": "",
        "release": "pnpm run prerelease && pnpm changeset",
        "prerelease": "pnpm run docs:build && pnpm changeset",
        "\n========== CODE STYLE >> ==========": "",
        "lint": "cross-var eslint  -c $npm_package_config_eslint_config",
        "prettier": "cross-var prettier {*,**/*}.{ts,js,cjs,mjs,cts,mts,sh,html,json,yaml,yml,graphql,md} ./.husky/* --ignore-path ./.gitignore --no-error-on-unmatched-pattern --write",
        "\n========== CHECK >> ==========": "",
        "check": "pnpm check:self",
        "check:self": "pnpm lint",
        "\n========== FIX >> ==========": "",
        "fix": "pnpm fix:self",
        "fix:self": "pnpm lint --fix &&  pnpm prettier --write",
        "\n========== CLEAN >> ==========": "",
        "clean": "pnpm run clean:self && pnpm -r clean",
        "clean:self": "tsc --build --clean",
        "\n========== UNINSTALL >> ==========": "",
        "uninstall": "pnpm nx:reset && pnpm run clean && pnpm uninstall:list && pnpm run uninstall:rm && pnpm run uninstall:lock",
        "uninstall:list": "find . -name 'node_modules' -type d -prune",
        "uninstall:rm": "find . -name 'node_modules' -type d -prune -exec rm -rf '{}' +",
        "uninstall:lock": "rm -f pnpm-lock.yaml && rm -f packages/**/pnpm-lock.yaml",
        "\n========== LIFECYCLE >> ==========": "",
        "prepare": "husky",
        "pre:commit": "lint-staged",
        "postinstall": "pnpm nx:build:config && pnpm build:self",
        "\n========== WORKFLOW >> ==========": "",
        "workflow:archive": "pnpm install && open /Applications/Docker.app && cross-var pnpm exec gh act --workflows  ./.github/workflows/workflow-build.yml --reuse",
        "registry:start": "pnpm exec verdaccio"
    },
    "devDependencies": {
        "@changesets/cli": "^2.27.7",
        "@commitlint/cli": "^19.3.0",
        "@commitlint/config-conventional": "^19.2.2",
        "@commitlint/cz-commitlint": "^19.2.0",
        "@commitlint/types": "^19.0.3",
        "@snailicide/build-config": "workspace:^",
        "@types/node": "^22.5.0",
        "commitizen": "^4.3.0",
        "cross-var": "^1.1.0",
        "eslint": "^9.8.0",
        "git-branch-is": "^4.0.0",
        "husky": "^9.1.5",
        "lint-staged": "^15.2.7",
        "nx": "19.6.2",
        "prettier": "^3.3.3",
        "typescript": "^5.5.4",
        "verdaccio": "^5.32.1"
    },
    "prettier": "@snailicide/build-config/prettier",
    "config": {
        "eslint": {
            "extensions": "ts,js,cjs,mjs",
            "path": "*",
            "config": "eslint.config.js"
        },
        "commitizen": {
            "path": "@commitlint/cz-commitlint"
        }
    }
}
