#!/bin/bash

# Protect master from accidental commits.

BRANCH=$(git rev-parse --abbrev-ref HEAD) PROTECTED_BRANCHES="^(master|main)"

echo "\n===\n>> Running in shell:: $SHELL"
echo ">> Pre-commit Hook:: Checking BRANCH: $BRANCH\n===\n"

if [[ "$BRANCH" =~ $PROTECTED_BRANCHES ]]; then
    echo "\n🚫 Commit directly to BRANCH: $BRANCH is not allowed!\n" && exit 1
fi

if [[ "$BRANCH" =~ ^[a-z]*([/-][a-z]+)*$ ]]; then
    echo "🐛 Branch name is valid!!"
else
    echo "\n🚫Branch name should be lowercase and NOT have any characters besides - or / :::: please rename your branch $BRANCH\n" && exit 1

fi

# if we are on DEVELOPMENT branch, in order to commit we need to lint all the files to test them before commiting.

if [[ "$BRANCH" == 'development' ]]; then
    echo -e "\n🚫 $BRANCH is DEVELOPMENT, checking + fixing ALL FILES  before commit \n"
    pnpm run prepare:all
    #re add the fixed files that were staged
    git add "$(git diff HEAD --diff-filter=MAR --cached --name-only)"
fi
# Bypass pre:commit if the branch name contains prefix "wip"
if [[ "$BRANCH" != *"wip"* ]]; then
    pnpm run pre:commit
fi

exit 0
