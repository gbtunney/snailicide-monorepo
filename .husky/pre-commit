#!/bin/sh

# Protect master from accidental commits.

BRANCH=$(git rev-parse --abbrev-ref HEAD)
PROTECTED_BRANCHES="^(master|main)"

echo -e "===\n>> Latest Pre-commit Hook:: Checking BRANCH: $BRANCH"

if [[ "$BRANCH" =~ $PROTECTED_BRANCHES ]]; then
    echo -e "\nðŸš« Commit directly to BRANCH:  $BRANCH is not allowed!\n" && exit 1
fi
if [[ $BRANCH =~ [^[:ascii:]/-] ]]; then
    echo -e "\nðŸš« Branch name should not have any ascii and upper case letters, please rename your branch name\n" && exit 1
fi

if [[ $BRANCH =~ [A-Z] ]]; then
    echo -e "\nðŸš« Branch name should not have any ascii and upper case letters, please rename your branch name\n" && exit 1
fi

# if we are on DEVELOPMENT branch, in order to commit we need to lint all the files to test them before commiting.

if [[ "$BRANCH" == 'development' ]]; then
    echo -e "\nðŸš« $BRANCH is DEVELOPMENT, checking + fixing ALL FILES  before commit \n"
    pnpm run prepare:all
    #re add the fixed files that were staged
    git add $(git diff HEAD --diff-filter=MAR --cached --name-only)
fi
# Bypass pre:commit if the branch name contains prefix "wip"
if [[ "$BRANCH" != *"wip"* ]]; then
    pnpm run pre:commit
fi

exit 0
