#!/bin/sh

# Protect master/main from accidental commits.
BRANCH=$(git rev-parse --abbrev-ref HEAD)
PROTECTED_BRANCHES="master main"

echo "\n===\n>> Running in shell:: $SHELL"
echo ">> Pre-commit Hook:: Checking BRANCH: $BRANCH\n===\n"

for protected in $PROTECTED_BRANCHES; do
    if [ "$BRANCH" = "$protected" ]; then
        echo "\n🚫 Commit directly to BRANCH: $BRANCH is not allowed!\n"
        exit 1
    fi
done

# Validate branch name: only lowercase letters, dashes, and slashes
case "$BRANCH" in
    # valid: lowercase, dashes, slashes
    [a-z][a-z0-9/-]*)
        echo "🐛 Branch name is valid!!"
        ;;
    *)
        echo "\n🚫Branch name should be lowercase and NOT have any characters besides - or / :::: please rename your branch $BRANCH\n"
        exit 1
        ;;
esac

# If on development branch, lint all files before commit
if [ "$BRANCH" = "development" ]; then
    echo "\n🚫 $BRANCH is DEVELOPMENT, checking + fixing ALL FILES before commit \n"
    pnpm run prepare:all
    # re-add the fixed files that were staged
    git add "$(git diff HEAD --diff-filter=MAR --cached --name-only)"
fi

exit 0
